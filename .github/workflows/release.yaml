name: Create release

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/labd/mach-composer

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install chocolatey
        run: |
          mkdir -p /opt/chocolatey
          wget -q -O - "https://github.com/chocolatey/choco/releases/download/${CHOCOLATEY_VERSION}/chocolatey.v${CHOCOLATEY_VERSION}.tar.gz" | tar -xz -C "/opt/chocolatey"
          echo '#!/bin/bash' >> /usr/local/bin/choco
          echo 'mono /opt/chocolatey/choco.exe $@' >> /usr/local/bin/choco
          chmod +x /usr/local/bin/choco
        env:
          CHOCOLATEY_VERSION: 1.2.1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.1

      - name: Run tests
        run: git checkout -- go.mod go.sum

      - name: Create release
        uses: goreleaser/goreleaser-action@v3
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: ${{ env.GOPATH }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}

      - name: Upload release
        uses: actions/upload-artifact@v3
        with:
          name: mach-composer
          path: dist/*

  docker:
    needs: [goreleaser]
    name: Build and push docker image
    env:
      DEFAULT_TERRAFORM: "1.3"
    strategy:
      matrix:
        terraform: ["0.14.11", "1.1.9", "1.2.9", "1.3.5"]
        cloud: ["aws", "azure", "all"]

    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set flavor
        id: flavor
        run: |
          TERRAFORM_VERSION=${{ matrix.terraform }}
          TERRAFORM=${TERRAFORM_VERSION%.*}

          SUFFIX=""
          if [ "${{ matrix.cloud }}" != "all" ]; then
              SUFFIX="-${{ matrix.cloud }}"
          fi
          if [ "${TERRAFORM}" != "${DEFAULT_TERRAFORM}" ]; then
              SUFFIX="${SUFFIX}-tf${TERRAFORM}"
          fi
          echo "FLAVOR=${SUFFIX}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: |
            suffix=${{ steps.flavor.outputs.FLAVOR }}
            latest=false
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: default-${{ matrix.cloud }}
          set: |
            base.args.GORELEASER_ARGS=--snapshot
            base.args.TERRAFORM_VERSION=${{ matrix.terraform }}
          push: true

  docker-cli:
    needs: [goreleaser]
    name: Build and push docker image

    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: |
            suffix=-cli
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: cli
          push: true
