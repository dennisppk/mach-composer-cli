package generator

import (
	"fmt"
	"github.com/mach-composer/mach-composer-cli/internal/config"
	"strings"
)

// renderSite is responsible for generating the `site.tf` file. Therefore, it is
// the main entrypoint for generating the terraform file for each site.
func renderSite(cfg *config.MachConfig, site *config.SiteConfig) (string, error) {
	result := []string{
		"# This file is auto-generated by MACH composer",
		fmt.Sprintf("# Site: %s", site.Identifier),
	}

	// Render the terraform config
	val, err := renderTerraformConfig(cfg, site, site.Identifier)
	if err != nil {
		return "", fmt.Errorf("renderTerraformConfig: %w", err)
	}
	result = append(result, val)

	// Render all the file sources
	val, err = renderFileSources(cfg, site)
	if err != nil {
		return "", fmt.Errorf("failed to render file sources: %w", err)
	}
	result = append(result, val)

	// Render all the global resources
	val, err = renderResources(cfg, site)
	if err != nil {
		return "", fmt.Errorf("failed to render resources: %w", err)
	}
	result = append(result, val)

	content := strings.Join(result, "\n")
	return content, nil
}
